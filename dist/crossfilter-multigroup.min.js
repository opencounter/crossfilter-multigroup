/*!
 * crossfilter-multigroup v0.5.0
 * Copyright (c) 2015 Open Counter Enterprises, Inc.
 * This software is free to use under the MIT license.
 * See https://github.com/opencounter/crossfilter-multigroup/blob/master/LICENSE
 */
!function(global,factory){if("function"==typeof define&&define.amd)define(["exports","module"],factory);else if("undefined"!=typeof exports&&"undefined"!=typeof module)factory(exports,module);else{var mod={exports:{}};factory(mod.exports,mod),global.crossfilterMultigroup=mod.exports}}(this,function(exports,module){"use strict";function Multigroup(dimension,groupValues){function identity(x){return x}function groupsForRecord(record){return groupValues(record)||[]}function ensureGroupData(){var combinations=group.all();if(shouldCheckGroups){for(var i=combinations.length-1;i>-1;i--)for(var values=combinations[i].key,j=values.length-1;j>-1;j--)null==groupData[values[j]]&&(groupData[values[j]]=0,keyArray=null,valueArray=null);shouldCheckGroups=!1}}function asArray(){var result=[];for(var key in groupData)result.push({key:key,value:groupData[key]});return result}function getByKey(){return keyArray||(keyArray=asArray().sort(function(a,b){return a.key<b.key?-1:1})),keyArray}function getByValue(){return valueArray||(valueArray=asArray().sort(function(a,b){var aValue=orderValue(a.value),bValue=orderValue(b.value);return aValue>bValue?-1:bValue>aValue?1:0})),valueArray}if(!dimension||!dimension.group)throw new TypeError("The first argument for multigroup must be a Crossfilter dimension object.");if("function"!=typeof groupValues)throw new TypeError("The second argument for multigroup must be a function that, given a record, returns an array of values to group by.");var keyArray,valueArray,shouldCheckGroups,groupData={},orderValue=identity,group=dimension.group().reduce(function(memo,item){return keyArray=null,valueArray=null,groupsForRecord(item).forEach(function(value){groupData[value]=(groupData[value]||0)+1}),0},function(memo,item){return keyArray=null,valueArray=null,groupsForRecord(item).forEach(function(value){groupData[value]=(groupData[value]||1)-1}),0},function(){return shouldCheckGroups=!0,0});return{all:function(){return ensureGroupData(),getByKey()},top:function(count){return ensureGroupData(),getByValue().slice(0,count)},size:function size(){ensureGroupData();var size=0;for(var key in groupData)size++;return size},order:function(valueGetter){return valueGetter=valueGetter||identity,valueGetter!==orderValue&&(orderValue=valueGetter,valueArray=null),this},orderNatural:function(){return this.order(identity)},dispose:function(){return group.dispose(),this},reduce:function(){throw new Error("reduce() is not implemented on multigroup!")},reduceCount:function(){return this},reduceSum:function(){throw new Error("reduceSum() is not implemented on multigroup!")}}}module.exports=Multigroup});